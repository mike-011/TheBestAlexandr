# https://habr.com/ru/post/207988/ интересный ресурс) на закуску но сильн не вникай
#############################################################################################
# схема объявления функции
# далее ее вызов и присвоение результата в переменную
#############################################################################################
def a():
    pass

b = a()
print(b) # Выводит None так как функция ничего не возвращает

#############################################################################################
# лямбда функция такая же как и функция, всегда возвращает результат
#############################################################################################
a = lambda x:x*2

b = a(3)
print(b)

def a(x):
    return x*2

b = a(3)
print(b)

#############################################################################################
# передача простой функции(но можно и другую лямбду передать) в лямбда
#############################################################################################
def a(x):
    return x*2

b = lambda y: a(x = y)
c = b(2) # присваиваем переменной лямбду с фунцией и значением x==2
print(c)

#############################################################################################
# лямбда в качестве return
#############################################################################################
def a(x):
    print(x)
    return lambda n: n + x
b = a(2) # присваиваем нашу функцию в переменную x ==2
print(b(3)) # передаем в return а он есть lambda с переменной N == 3

#############################################################################################
# лямбда может быть с двумя и более аргументами
#############################################################################################
a = lambda x,y: (x + y) * 2

b = a(2,3)
print(b)

def a(x,y):
    return (x + y) * 2

b = a(2,3)
print(b)

#############################################################################################
# функция с аргументом, которая что то делает, но ничего не возвращает, классический пример
# что  то выводит ра экран
#############################################################################################
def a(x):
    x*2

b = a(2)
print(b)

#############################################################################################
# функция без аргументов, которая возвращает значения, может быть, что она возвращает много
# вычислительных значений из БД
#############################################################################################
def a():
    return 1,2,3

a,b,c = a()
print(a,b,c)

#############################################################################################
# именованый аргумент
#############################################################################################
def a(x=2):
    return x

b = a()
print(b)

#############################################################################################
# именованый и не именованый аргументы
#############################################################################################
def a(y,x=2):
    return x+y

b = a(2)
print(b)

b = a(2, 5)
print(b)

#############################################################################################
# одна функция использует в своих вычислениях другую
#############################################################################################
def a():
    return 2

def b(x):
    return x*a()

c = b(3)
print(c)

#############################################################################################
#одна функция определяет в своем теле вторую
#############################################################################################
def a(x):
        def b(y):
            return y+x
return b

c = a(1)
print(c(3))

#############################################################################################
# функция которая принимает множество не именованых аргументов
#############################################################################################
def a(*args):
    return args

print(a(1,2,3,4,5))

#############################################################################################
# функция которая принимает множество именованых аргументов
#############################################################################################
def a(**args):
    return args

print(a(a=1,b=2))